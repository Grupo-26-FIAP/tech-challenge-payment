import { MerchantOrderResponseDto } from '@Application/dtos/response/payment/merchant-order.response.dto';

export const MERCHANT_ORDER_RESPONSE_DTO_MOCK: MerchantOrderResponseDto = {
  id: 123456,
  status: 'closed',
  external_reference: 'order-123',
  preference_id: 'pref-456',
  payments: [
    {
      id: 7890,
      transaction_amount: 100.0,
      total_paid_amount: 100.0,
      shipping_cost: 10.0,
      currency_id: 'BRL',
      status: 'approved',
      status_detail: 'accredited',
      operation_type: 'regular_payment',
      date_approved: '2024-02-12T10:00:00Z',
      date_created: '2024-02-12T09:00:00Z',
      last_modified: '2024-02-12T11:00:00Z',
      amount_refunded: 0.0,
    },
  ],
  shipments: [],
  payouts: [],
  collector: {
    id: 9999,
    email: 'collector@example.com',
    nickname: 'CollectorNick',
  },
  marketplace: 'test_marketplace',
  notification_url: 'https://webhook.site/notification',
  date_created: '2024-02-12T09:00:00Z',
  last_updated: '2024-02-12T11:00:00Z',
  sponsor_id: null,
  shipping_cost: 10.0,
  total_amount: 110.0,
  site_id: 'MLB',
  paid_amount: 100.0,
  refunded_amount: 0.0,
  payer: {
    id: 5555,
    email: 'payer@example.com',
  },
  items: [
    {
      id: 'item-1',
      category_id: 'category-123',
      currency_id: 'BRL',
      description: 'Sample item description',
      picture_url: 'https://example.com/item.jpg',
      title: 'Test Item',
      quantity: 1,
      unit_price: 100.0,
    },
  ],
  cancelled: false,
  additional_info: 'Some additional info',
  application_id: null,
  is_test: false,
  order_status: 'paid',
  client_id: 'client-789',
};
